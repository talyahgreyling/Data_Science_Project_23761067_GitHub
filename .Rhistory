"",
"",
"",
"")
) %>% tibble::as_tibble()
# Create and populate data frame
df1 <- data.frame(
Variable = c("id", "rating", "note", "language", "created_at", "flavor_word_matches", "user_is_featured", "user_is_premium", "user_statistics_followers_count", "user_statistics_followings_count", "user_statistics_ratings_count", "user_statistics_ratings_sum", "user_statistics_reviews_count", "user_statistics_purchase_order_count", "vintage_id", "vintage_year", "vintage_has_valid_ratings", "vintage_statistics_ratings_count", "vintage_statistics_ratings_average", "vintage_statistics_labels_count", "vintage_statistics_reviews_count", "vintage_wine_id", "vintage_wine_name", "vintage_wine_winery_name", "vintage_wine_winery_statistics_ratings_count", "vintage_wine_winery_statistics_ratings_average", "vintage_wine_winery_statistics_labels_count", "vintage_wine_winery_statistics_wines_count", "vintage_wine_statistics_ratings_count", "vintage_wine_statistics_ratings_average", "vintage_wine_statistics_labels_count", "vintage_wine_statistics_vintages_count", "activity_statistics_likes_count", "activity_statistics_comments_count"),
Description = c("Identification code of review.",
"Rating out of 5 assigned to the wine by the reviewer",
"Note written about the wine by the reviewer",
"Language of the review",
"Moment the review was recorded in (Year month date time) format",
"List of 'flavor words' mentioned in the review",
"Whether the reviewer is a featured user",
"Whether the reviewer is a premium (paid subscription) user",
"Amount of followers the reviewer has",
"Amount of users that the reviewer is following",
"Total amount of ratings that the reviewer has given",
"Total sum of all ratings given by the reviewer",
"Total amount of reviews that the reviewer has given",
"Amount of purchase orders made by the reviewee on Vivino",
"Identification code of the vintage reviewed",
"Year the grapes were harvested",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"")
) %>% tibble::as_tibble()
# Generate Table2
table2 <- kable(data, "html", booktabs = TRUE, longtable = FALSE, linesep = "", caption = "") %>%
kable_styling(font_size = 10)
# Print Table2
print(table)
# Create and populate data frame
df1 <- data.frame(
Variable = c("id", "rating", "note", "language", "created_at", "flavor_word_matches", "user_is_featured", "user_is_premium", "user_statistics_followers_count", "user_statistics_followings_count", "user_statistics_ratings_count", "user_statistics_ratings_sum", "user_statistics_reviews_count", "user_statistics_purchase_order_count", "vintage_id", "vintage_year", "vintage_has_valid_ratings", "vintage_statistics_ratings_count", "vintage_statistics_ratings_average", "vintage_statistics_labels_count", "vintage_statistics_reviews_count", "vintage_wine_id", "vintage_wine_name", "vintage_wine_winery_name", "vintage_wine_winery_statistics_ratings_count", "vintage_wine_winery_statistics_ratings_average", "vintage_wine_winery_statistics_labels_count", "vintage_wine_winery_statistics_wines_count", "vintage_wine_statistics_ratings_count", "vintage_wine_statistics_ratings_average", "vintage_wine_statistics_labels_count", "vintage_wine_statistics_vintages_count", "activity_statistics_likes_count", "activity_statistics_comments_count"),
Description = c("Identification code of review.",
"Rating out of 5 assigned to the wine by the reviewer",
"Note written about the wine by the reviewer",
"Language of the review",
"Moment the review was recorded in (Year month date time) format",
"List of 'flavor words' mentioned in the review",
"Whether the reviewer is a featured user",
"Whether the reviewer is a premium (paid subscription) user",
"Amount of followers the reviewer has",
"Amount of users that the reviewer is following",
"Total amount of ratings that the reviewer has given",
"Total sum of all ratings given by the reviewer",
"Total amount of reviews that the reviewer has given",
"Amount of purchase orders made by the reviewee on Vivino",
"Identification code of the vintage reviewed",
"Year the grapes were harvested",
"A",
"A",
"A",
"A",
"A",
"A",
"A",
"A",
"A",
"A",
"A",
"A",
"A",
"A",
"A",
"A",
"A",
"A")
) %>% tibble::as_tibble()
# Generate Table2
table2 <- kable(data, "html", booktabs = TRUE, longtable = FALSE, linesep = "", caption = "") %>%
kable_styling(font_size = 10)
# Print Table2
print(table)
# Generate Table2
table2 <- kable(df1, "html", booktabs = TRUE, longtable = FALSE, linesep = "", caption = "") %>%
kable_styling(font_size = 10)
# Print Table2
print(table)
# Generate Table2
table2 <- kable(df1, "html", booktabs = TRUE, longtable = FALSE, linesep = "", caption = "") %>%
kable_styling(font_size = 10)
# Print Table2
print(table2)
# Create empty table
datatab <- data[1:5,] %>% tibble::as_tibble()
# Populate with useful columns
datatab1 <- datatab1 %>%
select(c("id", "rating", "note", "language", "created_at", "flavor_word_matches", "user_is_featured", "user_is_premium", "user_statistics_followers_count", "user_statistics_followings_count", "user_statistics_ratings_count", "user_statistics_ratings_sum", "user_statistics_reviews_count", "user_statistics_purchase_order_count", "vintage_id", "vintage_year", "vintage_has_valid_ratings", "vintage_statistics_ratings_count", "vintage_statistics_ratings_average", "vintage_statistics_labels_count", "vintage_statistics_reviews_count", "vintage_wine_id", "vintage_wine_name", "vintage_wine_winery_name", "vintage_wine_winery_statistics_ratings_count", "vintage_wine_winery_statistics_ratings_average", "vintage_wine_winery_statistics_labels_count", "vintage_wine_winery_statistics_wines_count", "vintage_wine_statistics_ratings_count", "vintage_wine_statistics_ratings_average", "vintage_wine_statistics_labels_count", "vintage_wine_statistics_vintages_count", "activity_statistics_likes_count", "activity_statistics_comments_count"))
##### Clean useful columns?
# Generate Table1
table1 <- kable(datatab1, "html", booktabs = TRUE, longtable = FALSE, linesep = "", caption = "") %>%
kable_styling(font_size = 10)
# Print Table1
print(table1)
# #Create variables for values that are the same for all observations:
# vintage_wine_region_country_regions_count <- data$vintage_wine_region_country_regions_count[1]
# vintage_wine_region_country_users_count <- data$vintage_wine_region_country_users_count[1]
# vintage_wine_region_country_wines_count <- data$vintage_wine_region_country_wines_count[1]
# vintage_wine_region_country_wineries_count <- data$vintage_wine_region_country_wineries_count[1]
# vintage_wine_region_country_regions_count
# Create empty table
datatab <- data[1:5,] %>% tibble::as_tibble()
# Populate with useful columns
datatab1 <- datatab1 %>%
select(c("id", "rating", "note", "language", "created_at", "flavor_word_matches", "user_is_featured", "user_is_premium", "user_statistics_followers_count", "user_statistics_followings_count", "user_statistics_ratings_count", "user_statistics_ratings_sum", "user_statistics_reviews_count", "user_statistics_purchase_order_count", "vintage_id", "vintage_year", "vintage_has_valid_ratings", "vintage_statistics_ratings_count", "vintage_statistics_ratings_average", "vintage_statistics_labels_count", "vintage_statistics_reviews_count", "vintage_wine_id", "vintage_wine_name", "vintage_wine_winery_name", "vintage_wine_winery_statistics_ratings_count", "vintage_wine_winery_statistics_ratings_average", "vintage_wine_winery_statistics_labels_count", "vintage_wine_winery_statistics_wines_count", "vintage_wine_statistics_ratings_count", "vintage_wine_statistics_ratings_average", "vintage_wine_statistics_labels_count", "vintage_wine_statistics_vintages_count", "activity_statistics_likes_count", "activity_statistics_comments_count"))
##### Clean useful columns?
# Generate Table1
table1 <- kable(datatab1, "html", booktabs = TRUE, longtable = FALSE, linesep = "", caption = "") %>%
kable_styling(font_size = 10)
# Print Table1
print(table1)
# #Create variables for values that are the same for all observations:
# vintage_wine_region_country_regions_count <- data$vintage_wine_region_country_regions_count[1]
# vintage_wine_region_country_users_count <- data$vintage_wine_region_country_users_count[1]
# vintage_wine_region_country_wines_count <- data$vintage_wine_region_country_wines_count[1]
# vintage_wine_region_country_wineries_count <- data$vintage_wine_region_country_wineries_count[1]
# vintage_wine_region_country_regions_count
# Create empty table
datatab1 <- data[1:5,] %>% tibble::as_tibble()
# Populate with useful columns
datatab1 <- datatab1 %>%
select(c("id", "rating", "note", "language", "created_at", "flavor_word_matches", "user_is_featured", "user_is_premium", "user_statistics_followers_count", "user_statistics_followings_count", "user_statistics_ratings_count", "user_statistics_ratings_sum", "user_statistics_reviews_count", "user_statistics_purchase_order_count", "vintage_id", "vintage_year", "vintage_has_valid_ratings", "vintage_statistics_ratings_count", "vintage_statistics_ratings_average", "vintage_statistics_labels_count", "vintage_statistics_reviews_count", "vintage_wine_id", "vintage_wine_name", "vintage_wine_winery_name", "vintage_wine_winery_statistics_ratings_count", "vintage_wine_winery_statistics_ratings_average", "vintage_wine_winery_statistics_labels_count", "vintage_wine_winery_statistics_wines_count", "vintage_wine_statistics_ratings_count", "vintage_wine_statistics_ratings_average", "vintage_wine_statistics_labels_count", "vintage_wine_statistics_vintages_count", "activity_statistics_likes_count", "activity_statistics_comments_count"))
##### Clean useful columns?
# Generate Table1
table1 <- kable(datatab1, "html", booktabs = TRUE, longtable = FALSE, linesep = "", caption = "") %>%
kable_styling(font_size = 10)
# Print Table1
print(table1)
# #Create variables for values that are the same for all observations:
# vintage_wine_region_country_regions_count <- data$vintage_wine_region_country_regions_count[1]
# vintage_wine_region_country_users_count <- data$vintage_wine_region_country_users_count[1]
# vintage_wine_region_country_wines_count <- data$vintage_wine_region_country_wines_count[1]
# vintage_wine_region_country_wineries_count <- data$vintage_wine_region_country_wineries_count[1]
# vintage_wine_region_country_regions_count
drop(datatab)
drop(datatab)
rm(datatab)
# Extract useful columns
dataclean <- dataclean %>%
select(c("id", "rating", "note", "language", "created_at", "flavor_word_matches", "user_is_featured", "user_is_premium", "user_statistics_followers_count", "user_statistics_followings_count", "user_statistics_ratings_count", "user_statistics_ratings_sum", "user_statistics_reviews_count", "user_statistics_purchase_order_count", "vintage_id", "vintage_year", "vintage_has_valid_ratings", "vintage_statistics_ratings_count", "vintage_statistics_ratings_average", "vintage_statistics_labels_count", "vintage_statistics_reviews_count", "vintage_wine_id", "vintage_wine_name", "vintage_wine_winery_name", "vintage_wine_winery_statistics_ratings_count", "vintage_wine_winery_statistics_ratings_average", "vintage_wine_winery_statistics_labels_count", "vintage_wine_winery_statistics_wines_count", "vintage_wine_statistics_ratings_count", "vintage_wine_statistics_ratings_average", "vintage_wine_statistics_labels_count", "vintage_wine_statistics_vintages_count", "activity_statistics_likes_count", "activity_statistics_comments_count"))
# Extract useful columns
dataclean <- data %>%
select(c("id", "rating", "note", "language", "created_at", "flavor_word_matches", "user_is_featured", "user_is_premium", "user_statistics_followers_count", "user_statistics_followings_count", "user_statistics_ratings_count", "user_statistics_ratings_sum", "user_statistics_reviews_count", "user_statistics_purchase_order_count", "vintage_id", "vintage_year", "vintage_has_valid_ratings", "vintage_statistics_ratings_count", "vintage_statistics_ratings_average", "vintage_statistics_labels_count", "vintage_statistics_reviews_count", "vintage_wine_id", "vintage_wine_name", "vintage_wine_winery_name", "vintage_wine_winery_statistics_ratings_count", "vintage_wine_winery_statistics_ratings_average", "vintage_wine_winery_statistics_labels_count", "vintage_wine_winery_statistics_wines_count", "vintage_wine_statistics_ratings_count", "vintage_wine_statistics_ratings_average", "vintage_wine_statistics_labels_count", "vintage_wine_statistics_vintages_count", "activity_statistics_likes_count", "activity_statistics_comments_count"))
test_data <- data %>%
filter(language != "en")
test_data
install.packages("googleLanguageR")           ############# delete at end
pacman::p_load(dbbasic,
dplyr,
ggplot2,
ggwordcloud,
glue,
googleLanguageR,
here,
kableExtra,
ldatuning,
pacman,
remotes,
targets,
tidytext,
tidyverse,
topicmodels,
quanteda,
xtable)
install.packages("translateR")           ############# delete at end
install.packages("translateR")           ############# delete at end
install.packages("translateR")
install.packages("translateR")           ############# delete at end
pacman::p_load(dbbasic,
dplyr,
ggplot2,
ggwordcloud,
glue,
here,
kableExtra,
ldatuning,
pacman,
remotes,
targets,
tidytext,
tidyverse,
topicmodels,
translateR,
quanteda,
xtable)
review_tokens <- tokens(
tolower(dataclean$note),
remove_punct = TRUE,
remove_symbols = TRUE,
remove_numbers = TRUE,
verbose = TRUE
)
gumtree_texts <- read_csv("data/gumtree_clean.zip")
gumtree_texts %>%
sample_n(1) %>% #quickly look at what dataset entails by extracting 1 observation
t   #transpose
#copy paste output in ChatGPT say doing a project this is an example please make a latex table & does really nice with descriptives & everything
gumtree_tokens <- tokens(
tolower(gumtree_texts$description),
remove_punct = TRUE,
remove_symbols = TRUE,
remove_numbers = TRUE,
remove_url = TRUE,
verbose = TRUE   #for fun lets see what this does
)   #maybe should remove social media tags?
#PROJECT: we followed the standard pre-processing steps of removing punctuation, symbols, characters and taking everything to lower case
ocean_kwic <- kwic(
# define text
gumtree_tokens,
# define search pattern
pattern = "ocean",
# define context window size
window = 5
) %>%
as_tibble %>%
select(-pattern)
ocean_kwic
wine_kwic <- kwic(review_tokens,
pattern = "wine",
window = 5) %>%
as_tibble %>%
select(-pattern)
wine_kwic
yummy_kwic <- kwic(review_tokens,
pattern = "yummy",
window = 5) %>%
as_tibble %>%
select(-pattern)
yummy_kwic
delicious_kwic <- kwic(review_tokens,
pattern = "delicious",
window = 5) %>%
as_tibble %>%
select(-pattern)
delicious_kwic
lekker_kwic <- kwic(review_tokens,
pattern = "lekker",
window = 5) %>%
as_tibble %>%
select(-pattern)
lekker_kwic
wine_pre_post <- wine_kwic %>%
unite("winewords", c(pre, post)) %>%
select(docname, winewords)
wine_pre_post
wine_tokens <- wine_pre_post %>%   #split text up into tidy format
unnest_tokens(
input = winewords,
output = word,
token = "ngrams",
n = 1
)
wine_tokens
wine_tokens <- wine_tokens %>%
mutate(word = gsub("_", "\\1", word)) %>%
anti_join(stop_words, by = join_by(word))
wine_tokens
fmxdat::make_project()
fmxdat::make_project()
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
fig.align = "center",
fig.pos = "H",
fig.width = 6,
fig.height = 5)
#echo = FALSE,
# Create empty table
datatab1 <- data[1:5,] %>% tibble::as_tibble()
# Populate with useful columns
datatab1 <- datatab1 %>%
select(c("id", "rating", "note", "language", "created_at", "flavor_word_matches", "user_is_featured", "user_is_premium", "user_statistics_followers_count", "user_statistics_followings_count", "user_statistics_ratings_count", "user_statistics_ratings_sum", "user_statistics_reviews_count", "user_statistics_purchase_order_count", "vintage_id", "vintage_year", "vintage_has_valid_ratings", "vintage_statistics_ratings_count", "vintage_statistics_ratings_average", "vintage_statistics_labels_count", "vintage_statistics_reviews_count", "vintage_wine_id", "vintage_wine_name", "vintage_wine_winery_name", "vintage_wine_winery_statistics_ratings_count", "vintage_wine_winery_statistics_ratings_average", "vintage_wine_winery_statistics_labels_count", "vintage_wine_winery_statistics_wines_count", "vintage_wine_statistics_ratings_count", "vintage_wine_statistics_ratings_average", "vintage_wine_statistics_labels_count", "vintage_wine_statistics_vintages_count", "activity_statistics_likes_count", "activity_statistics_comments_count"))
# Generate Table1
table1 <- kable(datatab1, "html", booktabs = TRUE, longtable = FALSE, linesep = "", caption = "") %>%
kable_styling(font_size = 10)
# Print Table1
print(table1)
# #Create variables for values that are the same for all observations??:
# vintage_wine_region_country_regions_count <- data$vintage_wine_region_country_regions_count[1]
# vintage_wine_region_country_users_count <- data$vintage_wine_region_country_users_count[1]
# vintage_wine_region_country_wines_count <- data$vintage_wine_region_country_wines_count[1]
# vintage_wine_region_country_wineries_count <- data$vintage_wine_region_country_wineries_count[1]
# vintage_wine_region_country_regions_count
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
fig.align = "center",
fig.pos = "H",
fig.width = 6,
fig.height = 5)
#echo = FALSE,
# Clear environment:
#rm(list = ls())            ############ uncomment before final submission
#install.packages("translateR")           ############# delete at end
# Load necessary packages:
pacman::p_load(dbbasic,
dplyr,
ggplot2,
ggwordcloud,
glue,
here,
kableExtra,
ldatuning,                   ############# update
pacman,
remotes,
targets,
tidytext,
tidyverse,
topicmodels,
translateR,
quanteda,
xtable)
# Suppress scientific notation:
options(scipen = 999)
# Set theme & colour palette:
palette <- c("#3A7370", "#FB9072", "#FFC57B", "#CE677A", "#163940", "#2C1F2C")
my_theme <- theme(
# Title, subtitle, and caption:
plot.title = element_text(colour = "white", size = 16, family = "arial", hjust = 0.5,face = "bold"),
plot.subtitle = element_text(colour = "white", size = 14, family = "arial"),
plot.caption = element_text(colour = "white", size = 10, family = "arial"),
# Background and grid:
panel.background = element_blank(),
plot.background = element_rect(fill = "black", color = "black"),
panel.grid.major = element_line(color = "white", size = 0.1),
panel.grid.minor = element_line(color = "white", size = 0.1),
# Axis titles and labels:
axis.title.x = element_text(colour = "white", size = 12,family = "arial", hjust = 0.5,face = "bold"),
axis.title.y = element_text(colour = "white", size = 12,family = "arial", hjust = 0.5,face = "bold"),
axis.text.y = element_text(colour = "white", size = 10,family = "arial"),
axis.text.x = element_text(colour = "white", size = 10,family = "arial"),
# Legend:
legend.position = "right",
legend.text = element_text(colour = "white",size = 12, family = "arial"),
legend.title = element_text(colour = "white",size = 12, family = "arial", hjust = 3,face = "bold"),
legend.key = element_rect(fill = "black", color = "black"),
legend.background = element_rect(fill = "black"),
# Other
axis.ticks = element_blank(),
strip.text = element_text(colour = "white", size = 12, family = "arial", vjust = 1, hjust = 0.5)
)
# Import data:
data <- readRDS("data/calitzdorp.rds")
data %>%
sample_n(1) %>%
t
############## delete at end
# Filter out NAs in column "vintage"
test_data <- data %>%
filter(!is.na(vintage_wine_statistics_status))
test_data
# Exclude zeros from column "price"
test_data <- data %>%
filter(language != "en")
test_data
test_data <- data %>%
filter(vintage_has_valid_ratings != vintage_wine_has_valid_ratings)
test_data
test_data <- data %>%
filter(vintage_id == 151915794)
test_data
# Create empty table
datatab1 <- data[1:5,] %>% tibble::as_tibble()
# Populate with useful columns
datatab1 <- datatab1 %>%
select(c("id", "rating", "note", "language", "created_at", "flavor_word_matches", "user_is_featured", "user_is_premium", "user_statistics_followers_count", "user_statistics_followings_count", "user_statistics_ratings_count", "user_statistics_ratings_sum", "user_statistics_reviews_count", "user_statistics_purchase_order_count", "vintage_id", "vintage_year", "vintage_has_valid_ratings", "vintage_statistics_ratings_count", "vintage_statistics_ratings_average", "vintage_statistics_labels_count", "vintage_statistics_reviews_count", "vintage_wine_id", "vintage_wine_name", "vintage_wine_winery_name", "vintage_wine_winery_statistics_ratings_count", "vintage_wine_winery_statistics_ratings_average", "vintage_wine_winery_statistics_labels_count", "vintage_wine_winery_statistics_wines_count", "vintage_wine_statistics_ratings_count", "vintage_wine_statistics_ratings_average", "vintage_wine_statistics_labels_count", "vintage_wine_statistics_vintages_count", "activity_statistics_likes_count", "activity_statistics_comments_count"))
# Generate Table1
table1 <- kable(datatab1, "html", booktabs = TRUE, longtable = FALSE, linesep = "", caption = "") %>%
kable_styling(font_size = 10)
# Print Table1
print(table1)
# #Create variables for values that are the same for all observations??:
# vintage_wine_region_country_regions_count <- data$vintage_wine_region_country_regions_count[1]
# vintage_wine_region_country_users_count <- data$vintage_wine_region_country_users_count[1]
# vintage_wine_region_country_wines_count <- data$vintage_wine_region_country_wines_count[1]
# vintage_wine_region_country_wineries_count <- data$vintage_wine_region_country_wineries_count[1]
# vintage_wine_region_country_regions_count
ggsave(
filename,       table1.png,
plot = last_plot(),
path = "figures",
width = 6,     # Width in inches (or `units` specified)
height = 5,    # Height in inches (or `units` specified)
units = "cm",   # Units for dimensions ("in", "cm", "mm", or "px")
dpi = 300,      # Dots per inch (resolution for raster formats)
device = png,  # Device function (e.g., "png", "pdf", "jpeg")
bg = "white",   # Background color
)
ggsave(
table1.png,
plot = last_plot(),
path = "figures",
width = 6,     # Width in inches (or `units` specified)
height = 5,    # Height in inches (or `units` specified)
units = "cm",   # Units for dimensions ("in", "cm", "mm", or "px")
dpi = 300,      # Dots per inch (resolution for raster formats)
device = png,  # Device function (e.g., "png", "pdf", "jpeg")
bg = "white",   # Background color
)
# Save Table1
save_kable(table1, "table1.png")
install.packages("webshot2")           ############# delete at end
pacman::p_load(dbbasic,
dplyr,
ggplot2,
ggwordcloud,
glue,
here,
kableExtra,
ldatuning,                   ############# update
pacman,
remotes,
targets,
tidytext,
tidyverse,
topicmodels,
translateR,
quanteda,
webshot2,
xtable)
# Save Table1
save_kable(table1, "table1.png")
webshot::install_phantomjs()
knitr::include_graphics("./figures/table1")
knitr::include_graphics("figures/table1")
knitr::opts_chunk$set(echo = FALSE,
message = FALSE,
warning = FALSE,
fig.width = 6,
fig.height = 5,
fig.pos = 'H')
knitr::include_graphics("figures/table1")
knitr::include_graphics("./figures/table1")
knitr::opts_chunk$set(echo = FALSE,
message = FALSE,
warning = FALSE,
fig.width = 6,
fig.height = 5,
fig.pos = 'H')
# Load necessary packages:
pacman::p_load(dbbasic,                  ############# check that same as Readme.rmd packages
dplyr,
ggplot2,
ggwordcloud,
glue,
here,
knitr,
ldatuning,
pacman,
pandoc,
remotes,
targets,
tidytext,
tidyverse,
topicmodels,
quanteda,
webshot2)
knitr::include_graphics("C:/Users/Talyah Greyling/Documents/1) Meesters/1) Data Science 871/Data_Science_Project_23761067_GitHub/figures")
# Set location:
loc <- "C:/Users/Talyah Greyling/Documents/1) Meesters/1) Data Science 871/Data_Science_Project_23761067_GitHub/"
include_graphics("{location}figures")
pacman::p_load(dbbasic,                  ############# check that same as Readme.rmd packages
dplyr,
ggplot2,
ggwordcloud,
glue,
here,
knitr,
ldatuning,
pacman,
pandoc,
remotes,
targets,
tidytext,
tidyverse,
tinytex,
topicmodels,
quanteda,
webshot2)
include_graphics("{location}figures")
tinytex::tlmgr_install(c("graphicx", "float", "grffile"))  # Essential packages
tinytex::tlmgr_update()
tinytex::tlmgr_update()       # Update TinyTeX itself
tinytex::tlmgr_update("--all") # Update all installed packages
tinytex::tlmgr_update()       # Update TinyTeX itself
tinytex::tlmgr_update("--all") # Update all installed packages
tinytex::tlmgr_install(c("standalone", "preview", "xcolor", "adjustbox"))
include_graphics("{location}figures")
include_graphics("{location}tables")
include_graphics("{location}tables/table1")
include_graphics("{location}tables/table1.png")
file.exists("{location}tables/table1.png")
file.exists("{loc}tables/table1.png")
# Set location:
loc <- "C:/Users/Talyah Greyling/Documents/1) Meesters/1) Data Science 871/Data_Science_Project_23761067_GitHub/"
file.exists("{loc}tables/table1.png")
